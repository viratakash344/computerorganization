$date
	Thu Feb 21 12:33:17 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module muxtest $end
$var wire 1 ! F $end
$var reg 16 " A [15:0] $end
$var reg 4 # S [3:0] $end
$scope module M $end
$var wire 16 $ in [15:0] $end
$var wire 1 ! out $end
$var wire 4 % sel [3:0] $end
$var wire 4 & t [3:0] $end
$scope module M0 $end
$var wire 4 ' in [3:0] $end
$var wire 1 ( out $end
$var wire 2 ) sel [1:0] $end
$upscope $end
$scope module M1 $end
$var wire 4 * in [3:0] $end
$var wire 1 + out $end
$var wire 2 , sel [1:0] $end
$upscope $end
$scope module M2 $end
$var wire 4 - in [3:0] $end
$var wire 1 . out $end
$var wire 2 / sel [1:0] $end
$upscope $end
$scope module M3 $end
$var wire 4 0 in [3:0] $end
$var wire 1 1 out $end
$var wire 2 2 sel [1:0] $end
$upscope $end
$scope module M4 $end
$var wire 4 3 in [3:0] $end
$var wire 1 ! out $end
$var wire 2 4 sel [1:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 4
bx 3
bx 2
x1
bx 0
bx /
x.
bx -
bx ,
x+
bx *
bx )
x(
bx '
bx &
bx %
bx $
bx #
bx "
x!
$end
#5
b0 )
0(
0!
b0 ,
0+
b0 /
1.
b0 2
11
b1100 &
b1100 3
b0 4
b1010 '
b0 *
b1111 -
b11 0
b0 #
b0 %
b11111100001010 "
b11111100001010 $
#10
b1 )
1(
b1101 &
b1101 3
1!
b1 ,
b1 /
b1 2
b1 #
b1 %
#15
b10 )
0(
b10 ,
b10 /
b10 2
01
b100 &
b100 3
b1 4
0!
b110 #
b110 %
#20
b0 )
b0 ,
b0 /
b0 2
11
b1100 &
b1100 3
1!
b11 4
b1100 #
b1100 %
#25
